import React, { useState, useEffect } from "react";
// import { Link } from "react-dom";
import style from "../Style/RunningCase.module.css";

const RunningCase = ({ colClass }) => {
  const [dataList, setDataList] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetch("http://localhost:3001/clients", {
      method: "GET",
      headers: { "content-type": "application/json" },
    })
      .then(async (res) => {
        if (res.ok) {
          const record = await res.json();
          setDataList(record);
        } else {
          console.error("Error fetching data");
        }
        setLoading(false);
      })
      .catch((err) => {
        console.log("Record not found");
      });
  }, []);

  const handleDeleteItem = (id) => {
    fetch(`http://localhost:3001/clients/${id}`, {
      method: "DELETE",
      headers: { "content-type": "application/json" },
    })
      .then((res) => {
        if (res.ok) {
          const updatedDataList = dataList.filter((item) => item.id !== id);
          setDataList(updatedDataList);
          console.log("Item deleted successfully");
        } else {
          console.error("Error deleting item");
        }
      })
      .catch((err) => {
        console.log("Delete request failed:", err);
      });
  };

  const handleEditItem = (id) => {
    console.log("Editing item with ID:", id);
  };
  const handleid = (id) => {
    console.log("Editing item with ID:", id);
  };

  return (
    <>
      <div className={`${colClass} mt-5 ${style.mainClient}`}>
        <div className={style.client}>
          <div className={style.inner}>
            <h5 className={style.no}>CASE NO.</h5>
            <h5 className={style.no}>COURT</h5>
            <h5 className={style.name}>CLIENT NAME</h5>
            <h5 className={style.name}>ADVOCATE</h5>
            <h5 className={style.name}>HEARING DATE</h5>
            <h5 className={style.name}>CASE TYPE</h5>
            <h5 className={style.name}>ACTION</h5>
          </div>
          {/* <hr className="m-0" /> */}
          <div className={style.clientData}>
            {loading ? (
              <p>Loading data...</p>
            ) : (
              dataList.map((item, index) => (
                <div key={index} className={style.dataRow}>
                  <table border="0" className={style.dataRow}>
                    <div key={index} className={style.runcase}>
                      <a
                        href={`/YourComponent/${item.id}`}
                        onClick={() => handleid(item.id)}
                        className={style.id}
                      >
                        {item.caseNo}
                      </a>
                    </div>
                    <div className={style.runcase}>
                      <p className={style.id}>{item.caseNo}</p>
                    </div>
                    <div className={style.runcase}>
                      <p className={style.name}>{item.clientFullName}</p>
                    </div>
                    <div className={style.runcase}>
                      <p className={style.name}>{item.oppositePartyFullName}</p>
                    </div>
                    <div className={style.runcase}>
                      <p className={style.name}>{item.loanAgrement}</p>
                    </div>
                    <div className={style.runcase}>
                      <p className={style.name}>{item.caseNo}</p>
                    </div>
                    <div className={style.runcase}>
                      <p className={style.name}>
                        <span
                          className={style.editIcon}
                          onClick={() => handleEditItem(item.id)}
                        >
                          <a href={`/ClientEditMain/${item.id}`}>
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              width="38"
                              height="34"
                              viewBox="0 0 41 41"
                              fill="none"
                            >
                              <path
                                d="M20.9121 0.736328C16.9565 0.736328 13.0897 1.90931 9.80071 4.10694C6.51173 6.30456 3.94828 9.42814 2.43453 13.0827C0.920775 16.7372 0.524708 20.7585 1.29641 24.6381C2.06812 28.5177 3.97293 32.0814 6.76998 34.8785C9.56703 37.6755 13.1307 39.5803 17.0103 40.352C20.8899 41.1237 24.9113 40.7277 28.5658 39.2139C32.2203 37.7002 35.3439 35.1367 37.5415 31.8477C39.7391 28.5587 40.9121 24.6919 40.9121 20.7363C40.9121 15.432 38.805 10.3449 35.0542 6.59419C31.3035 2.84346 26.2164 0.736328 20.9121 0.736328ZM32.2788 15.9113L19.7288 30.1447C19.5263 30.3728 19.2807 30.5587 19.0061 30.6917C18.7315 30.8247 18.4334 30.9022 18.1288 30.9197H17.9788C17.4103 30.9232 16.8609 30.7152 16.4371 30.3363L9.72045 24.378C9.25853 23.968 8.9784 23.3913 8.94167 22.7748C8.90494 22.1583 9.11464 21.5524 9.52462 21.0905C9.9346 20.6286 10.5113 20.3484 11.1278 20.3117C11.7443 20.275 12.3502 20.4847 12.8121 20.8947L17.8121 25.303L28.8204 12.803C29.2293 12.34 29.8054 12.0583 30.4219 12.02C31.0384 11.9818 31.6449 12.19 32.1079 12.5988C32.571 13.0077 32.8526 13.5838 32.8909 14.2003C32.9292 14.8168 32.721 15.4233 32.3121 15.8863L32.2788 15.9113Z"
                                fill="black"
                              />
                            </svg>
                          </a>
                        </span>
                        <span
                          className={`mx-3  ${style.deleteIcon}`}
                          onClick={() => handleDeleteItem(item.id)}
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="38"
                            height="34"
                            viewBox="0 0 41 41"
                            fill="none"
                          >
                            <path
                              d="M21.6557 19.1656V27.6666C21.6558 27.7646 21.6366 27.8616 21.5992 27.9521C21.5618 28.0426 21.5068 28.1248 21.4376 28.1941C21.3683 28.2633 21.2861 28.3182 21.1956 28.3557C21.1051 28.3931 21.0081 28.4123 20.9102 28.4122H20.8759C20.6843 28.4035 20.5034 28.3212 20.3709 28.1825C20.2384 28.0438 20.1645 27.8593 20.1646 27.6675V19.1656C20.1644 18.9737 20.2383 18.7892 20.3708 18.6505C20.5033 18.5117 20.6843 18.4295 20.8759 18.4209H20.9102C21.008 18.4208 21.1049 18.44 21.1953 18.4774C21.2858 18.5148 21.3679 18.5697 21.4372 18.6388C21.5064 18.708 21.5613 18.7901 21.5988 18.8805C21.6363 18.9709 21.6557 19.0678 21.6557 19.1656ZM25.1304 18.4369C24.9332 18.4206 24.7377 18.4833 24.5867 18.6111C24.4358 18.7389 24.3418 18.9215 24.3254 19.1186L23.6244 27.5903C23.6223 27.6114 23.6215 27.6316 23.6215 27.653C23.6227 27.8448 23.6978 28.0287 23.831 28.1666C23.9643 28.3045 24.1455 28.3858 24.3371 28.3936C24.5287 28.4014 24.716 28.3351 24.86 28.2085C25.004 28.0819 25.0938 27.9047 25.1106 27.7136L25.8116 19.2419C25.8116 19.2209 25.8141 19.2007 25.8141 19.1792C25.8139 18.9923 25.7435 18.8123 25.6169 18.6748C25.4903 18.5373 25.3166 18.4525 25.1304 18.4369ZM17.4949 19.1186C17.4781 18.9276 17.3884 18.7503 17.2443 18.6237C17.1003 18.4971 16.9131 18.4308 16.7214 18.4386C16.5298 18.4464 16.3486 18.5277 16.2153 18.6656C16.0821 18.8035 16.0071 18.9874 16.0058 19.1792C16.0058 19.2002 16.0058 19.2205 16.0083 19.2419L16.7093 27.7136C16.7261 27.9047 16.8159 28.0819 16.9599 28.2085C17.1039 28.3351 17.2912 28.4014 17.4828 28.3936C17.6744 28.3858 17.8556 28.3045 17.9889 28.1666C18.1221 28.0287 18.1972 27.8448 18.1984 27.653C18.1984 27.6324 18.1984 27.6118 18.1959 27.5903L17.4949 19.1186ZM40.9102 20.7363C40.9102 31.7821 31.9559 40.7363 20.9102 40.7363C9.86438 40.7363 0.910156 31.7821 0.910156 20.7363C0.910156 9.69056 9.86438 0.736328 20.9102 0.736328C31.9559 0.736328 40.9102 9.69056 40.9102 20.7363ZM27.4594 15.0369H14.292C14.1354 15.037 13.9806 15.0697 13.8373 15.1329C13.6941 15.1962 13.5656 15.2886 13.4601 15.4044C13.3547 15.5201 13.2745 15.6565 13.2247 15.805C13.175 15.9535 13.1567 16.1107 13.1712 16.2666L14.5427 31.0654C14.5686 31.3448 14.6979 31.6044 14.9052 31.7934C15.1126 31.9824 15.383 32.0872 15.6636 32.0873H26.1378C26.4193 32.0877 26.6908 31.9827 26.8987 31.7928C27.1065 31.603 27.2357 31.3421 27.2607 31.0617L28.5803 16.2629C28.5941 16.1073 28.5754 15.9505 28.5254 15.8025C28.4754 15.6545 28.3951 15.5185 28.2897 15.4032C28.1843 15.2879 28.056 15.1958 27.9131 15.1328C27.7702 15.0697 27.6157 15.0371 27.4594 15.0369ZM29.7951 12.924C29.7952 12.7572 29.7625 12.5921 29.6987 12.4381C29.635 12.2841 29.5415 12.1441 29.4236 12.0262C29.3057 11.9083 29.1657 11.8148 29.0117 11.7511C28.8576 11.6873 28.6925 11.6546 28.5258 11.6547H24.1803C24.1135 11.0317 23.8187 10.4555 23.3527 10.0368C22.8866 9.6181 22.2822 9.38653 21.6557 9.38664H20.1646C19.5381 9.38653 18.9337 9.6181 18.4676 10.0368C18.0016 10.4555 17.7068 11.0317 17.6401 11.6547H13.2945C12.9579 11.6547 12.635 11.7884 12.397 12.0264C12.1589 12.2645 12.0252 12.5873 12.0252 12.924C12.0252 13.2606 12.1589 13.5834 12.397 13.8215C12.635 14.0595 12.9579 14.1932 13.2945 14.1932H28.5258C28.8625 14.1932 29.1853 14.0595 29.4233 13.8215C29.6614 13.5834 29.7951 13.2606 29.7951 12.924Z"
                              fill="black"
                            />
                          </svg>
                        </span>
                        <span
                          className={style.editIcon}
                          onClick={() => handleEditItem(item.id)}
                        >
                          <a href={`/PdfClient/${item.id}`}>
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              width="38"
                              height="34"
                              viewBox="0 0 41 41"
                              fill="none"
                            >
                              <path
                                d="M20.9114 0.736328C9.86624 0.736328 0.912109 9.69113 0.912109 20.7359C0.912109 31.7807 9.86624 40.7363 20.9114 40.7363C31.9566 40.7363 40.9118 31.7813 40.9118 20.7359C40.9118 9.69059 31.9566 0.736328 20.9114 0.736328ZM30.4189 15.129L28.5193 17.0286L24.6525 13.1621L23.1856 14.629L27.0524 18.4958L17.5681 27.9793L13.7016 24.1131L12.2346 25.5801L16.1012 29.4466L15.1561 30.3917L15.1381 30.3737C15.0858 30.4602 15.0165 30.5352 14.9345 30.5942C14.8524 30.6532 14.7592 30.695 14.6605 30.717L11.0548 31.521C10.9316 31.5486 10.8035 31.5445 10.6824 31.5093C10.5612 31.474 10.451 31.4087 10.3618 31.3194C10.2724 31.2302 10.207 31.1198 10.1718 30.9985C10.1365 30.8772 10.1326 30.7489 10.1602 30.6257L10.9638 27.021C10.986 26.9223 11.0279 26.8292 11.087 26.7471C11.146 26.665 11.2211 26.5958 11.3076 26.5434L11.2893 26.5251L26.552 11.2618C26.6597 11.1545 26.8055 11.0942 26.9576 11.0944C27.1096 11.0945 27.2554 11.1549 27.3629 11.2625L30.4192 14.3181C30.5266 14.4257 30.587 14.5715 30.5869 14.7236C30.5869 14.8756 30.5264 15.0215 30.4189 15.129Z"
                                fill="black"
                              />
                            </svg>
                          </a>
                        </span>
                      </p>
                    </div>
                  </table>
                </div>
              ))
            )}
          </div>
        </div>
      </div>
    </>
  );
};

export default RunningCase;
